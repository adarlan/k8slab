apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}

spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}

  replicas: {{ .Values.replicas }}

  template:
    metadata:
      labels:
        app: {{ .Release.Name }}

    spec:
      containers:
      - name: hello-world

        {{ if eq .Values.environment "development" }}
        image: {{ printf "docker.io/adarlan/hello-world:%s" .Values.unstableImageTag }}
        {{ else }}
        image: {{ printf "docker.io/adarlan/hello-world:%s" .Values.stableImageTag }}
        {{ end }}

        ports:
        - name: web
          containerPort: 80

        resources:
          requests:
            memory: 100Mi
            cpu: 50m
          limits:
            memory: 150Mi
            cpu: 150m

        livenessProbe:
          httpGet:
            port: web
            path: /healthz
          initialDelaySeconds: 30
          periodSeconds: 10

        volumeMounts:
        - mountPath: /usr/share/nginx/html/index.html
          name: config-files
          subPath: index.html

      volumes:
      - name: config-files
        configMap:
          name: {{ .Release.Name }}
