{
  "version": 4,
  "terraform_version": "1.7.3",
  "serial": 10,
  "lineage": "60391e37-793e-39b3-80e9-0c992d9b333d",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./argocd-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "argocd-stack",
                "name": "argocd-stack",
                "namespace": "argocd",
                "revision": 1,
                "values": "{\"argo-cd\":{\"configs\":{\"cm\":{\"timeout.reconciliation\":\"30s\"},\"params\":{\"server.insecure\":true}},\"crds\":{\"keep\":false},\"global\":{\"domain\":\"argocd.localhost\"},\"server\":{\"ingress\":{\"annotations\":{\"nginx.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"nginx.ingress.kubernetes.io/force-ssl-redirect\":\"false\",\"nginx.ingress.kubernetes.io/ssl-redirect\":\"false\"},\"enabled\":true,\"ingressClassName\":\"nginx\"}}}}",
                "version": "0.1.0"
              }
            ],
            "name": "argocd-stack",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "argo-cd:\n  configs:\n    params:\n      server.insecure: true\n    cm:\n      timeout.reconciliation: 30s\n  crds:\n    keep: false\n  global:\n    domain: argocd.localhost\n  server:\n    ingress:\n      enabled: true\n      ingressClassName: nginx\n      annotations:\n        nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n        nginx.ingress.kubernetes.io/force-ssl-redirect: \"false\"\n        nginx.ingress.kubernetes.io/backend-protocol: \"HTTP\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "monitoring_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./monitoring-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "monitoring-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "monitoring-stack",
                "name": "monitoring-stack",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"grafana\":{\"datasources\":{},\"enabled\":true},\"kube-prometheus-stack\":{\"enabled\":true,\"grafana\":{\"enabled\":false}},\"loki\":{\"enabled\":true,\"loki\":{\"commonConfig\":{\"replication_factor\":1},\"storage\":{\"type\":\"filesystem\"}},\"singleBinary\":{\"replicas\":1}},\"promtail\":{\"config\":{\"clients\":[{\"tenant_id\":\"foobar\",\"url\":\"http://loki-gateway/loki/api/v1/push\"}]},\"enabled\":true}}",
                "version": "0.1.0"
              }
            ],
            "name": "monitoring-stack",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "kube-prometheus-stack:\n  enabled: true\n  grafana:\n    enabled: false\n\ngrafana:\n  enabled: true\n  datasources: {}\n\nloki:\n  enabled: true\n  loki:\n    commonConfig:\n      replication_factor: 1\n    storage:\n      type: 'filesystem'\n  singleBinary:\n    replicas: 1\n\npromtail:\n  enabled: true\n  config:\n    clients:\n      - url: http://loki-gateway/loki/api/v1/push\n        tenant_id: foobar\n\n# kube-prometheus-stack:\n#   # prometheus:\n#   #   service:\n#   #     type: NodePort\n#   #     nodePort: ${prometheusNodePort}\n#   grafana:\n#     enabled: false\n#     # service:\n#     #   type: NodePort\n#     #   nodePort: ${grafanaNodePort}\n\n# grafana:\n#   datasources: {}\n#   #  datasources.yaml:\n#   #    apiVersion: 1\n#   #    datasources:\n#   #    - name: Prometheus\n#   #      type: prometheus\n#   #      url: http://prometheus-prometheus-server\n#   #      access: proxy\n#   #      isDefault: true\n#   #    - name: CloudWatch\n#   #      type: cloudwatch\n#   #      access: proxy\n#   #      uid: cloudwatch\n#   #      editable: false\n#   #      jsonData:\n#   #        authType: default\n#   #        defaultRegion: us-east-1\n#   #    deleteDatasources: []\n#   #    - name: Prometheus\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "networking_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./networking-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "networking-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "networking-stack",
                "name": "networking-stack",
                "namespace": "networking",
                "revision": 1,
                "values": "{\"ingress-nginx\":{\"controller\":{\"extraArgs\":{\"publish-status-address\":\"localhost\"},\"hostPort\":{\"enabled\":true},\"nodeSelector\":{\"ingress-ready\":\"true\"},\"publishService\":{\"enabled\":false},\"service\":{\"type\":\"NodePort\"},\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\"}],\"watchIngressWithoutClass\":true}}}",
                "version": "0.1.0"
              }
            ],
            "name": "networking-stack",
            "namespace": "networking",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "ingress-nginx:\n  controller:\n    hostPort:\n      enabled: true\n    terminationGracePeriodSeconds: 0\n    service:\n      type: \"NodePort\"\n    watchIngressWithoutClass: true\n    nodeSelector:\n      ingress-ready: \"true\"\n    tolerations:\n    - effect: \"NoSchedule\"\n      key: \"node-role.kubernetes.io/master\"\n      operator: \"Equal\"\n    - effect: \"NoSchedule\"\n      key: \"node-role.kubernetes.io/control-plane\"\n      operator: \"Equal\"\n    publishService:\n      enabled: false\n    extraArgs:\n      publish-status-address: \"localhost\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "security_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./security-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "security-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "security-stack",
                "name": "security-stack",
                "namespace": "security",
                "revision": 1,
                "values": "{\"trivy\":{\"server\":{\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"512Mi\"}}}}}",
                "version": "0.1.0"
              }
            ],
            "name": "security-stack",
            "namespace": "security",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "trivy:\n  server:\n    resources:\n      requests:\n        cpu: 200m\n        memory: 512Mi\n        # ephemeral-storage: \"2Gi\"\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      # ephemeral-storage: \"2Gi\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
